{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "This template is partially managed by Amazon.Lambda.Annotations (v1.6.1.0).",
  "Resources": {
    "Default": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ],
        "SyncedEventProperties": {
          "RootGet": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 3,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_Default_Generated::Default",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "LogExpense": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPut"
        ],
        "SyncedEventProperties": {
          "RootPut": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 15,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_LogExpenseAsync_Generated::LogExpenseAsync",
        "Events": {
          "RootPut": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/log-expense",
              "Method": "PUT"
            }
          }
        }
      }
    },
    "ValidateSpreadsheet": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPost"
        ],
        "SyncedEventProperties": {
          "RootPost": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 15,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_ValidateSpreadsheetAsync_Generated::ValidateSpreadsheetAsync",
        "Events": {
          "RootPost": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/validate-spreadsheet",
              "Method": "POST"
            }
          }
        }
      }
    },
    "RemoveLastExpense": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootDelete"
        ],
        "SyncedEventProperties": {
          "RootDelete": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 15,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_RemoveLastExpenseAsync_Generated::RemoveLastExpenseAsync",
        "Events": {
          "RootDelete": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/undo",
              "Method": "DELETE"
            }
          }
        }
      }
    },
    "GetLastExpense": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootGet"
        ],
        "SyncedEventProperties": {
          "RootGet": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 15,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_GetLastExpenseAsync_Generated::GetLastExpenseAsync",
        "Events": {
          "RootGet": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/lastitem",
              "Method": "GET"
            }
          }
        }
      }
    },
    "AddCategoryRule": {
      "Type": "AWS::Serverless::Function",
      "Metadata": {
        "Tool": "Amazon.Lambda.Annotations",
        "SyncedEvents": [
          "RootPost"
        ],
        "SyncedEventProperties": {
          "RootPost": [
            "Path",
            "Method"
          ]
        }
      },
      "Properties": {
        "Runtime": "dotnet8",
        "CodeUri": ".",
        "MemorySize": 128,
        "Timeout": 15,
        "Policies": [
          "AWSLambdaBasicExecutionRole",
          "arn:aws:iam::795287297286:policy/Configurations_Read"
        ],
        "PackageType": "Zip",
        "Handler": "SpreadsheetManagerApi::SpreadsheetManagerApi.Functions_AddCategoryRuleAsync_Generated::AddCategoryRuleAsync",
        "Events": {
          "RootPost": {
            "Type": "HttpApi",
            "Properties": {
              "Path": "/add-category-rule",
              "Method": "POST"
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "ApiURL": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
      }
    }
  }
}